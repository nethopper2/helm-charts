{{- if .Values.secret.create }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "juicefs-s3-gateway.secretName" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "juicefs-s3-gateway.labels" . | nindent 4 }}
    {{- with .Values.secret.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.secret.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
type: Opaque
data:
  {{- with .Values.secret.config }}
  {{- if .name }}
  name: {{ .name | b64enc | quote }}
  {{- else }}
  {{- fail "secret.config.name is required when secret.create is true" }}
  {{- end }}
  {{- if .bucket }}
  bucket: {{ .bucket | b64enc | quote }}
  {{- else }}
  {{- fail "secret.config.bucket is required when secret.create is true" }}
  {{- end }}
  {{- if .storage }}
  storage: {{ .storage | b64enc | quote }}
  {{- else if not .token }}
  {{- fail "secret.config.storage is required when secret.create is true and token is not set (CE mode)" }}
  {{- end }}
  {{- if .metaurl }}
  metaurl: {{ .metaurl | b64enc | quote }}
  {{- else if not .token }}
  {{- fail "secret.config.metaurl is required when secret.create is true and token is not set (CE mode)" }}
  {{- end }}
  {{- if .token }}
  token: {{ .token | b64enc | quote }}
  {{- end }}
  # Auto-generated MinIO credentials for S3 gateway
  minio-root-user: {{ randAlphaNum 16 | b64enc | quote }}
  minio-root-password: {{ randAlphaNum 32 | b64enc | quote }}
  {{- if .rsaPassphrase }}
  rsa-passphrase: {{ .rsaPassphrase | b64enc | quote }}
  {{- end }}
  {{- if .rsaKey }}
  rsa-key: {{ .rsaKey | b64enc | quote }}
  {{- end }}
  {{- end }}
{{- end }}
