global:
  secretArgocdHook: PreSync


replicaCount: 1

image:
  repository: juicedata/mount
  pullPolicy: IfNotPresent
  # -- Overrides the image tag which defaults to the chart appVersion.
  # For JuiceFS Community Edition, use ce-vx.x.x style tags
  # For JuiceFS Enterprise Edition, use ee-vx.x.x style tags
  # Find the latest built images in our docker image repo: https://hub.docker.com/r/juicedata/mount
  tag: "ce-v1.3.0"

port: 9000
metricsPort: 9567
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# -- Service account configuration
serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # -- Annotations to add to the service account
  annotations: {}
  # -- Whether to automount the service account token
  automountServiceAccountToken: false

podAnnotations: {}
podLabels: {}

podSecurityContext:
  # -- Run as non-root user
  runAsNonRoot: true
  # -- Set filesystem group
  fsGroup: 65534
  # -- Run as specific user ID
  runAsUser: 65534
  # -- Run as specific group ID
  runAsGroup: 65534

securityContext:
  # -- Drop all capabilities
  capabilities:
    drop:
    - ALL
  # -- Read-only root filesystem
  readOnlyRootFilesystem: true
  # -- Run as non-root
  runAsNonRoot: true
  # -- Run as specific user ID
  runAsUser: 65534
  # -- Disallow privilege escalation
  allowPrivilegeEscalation: false

service:
  type: ClusterIP

ingress:
  enabled: false
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: ""
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 5000m
    memory: 5Gi
  requests:
    cpu: 1000m
    memory: 1Gi

# -- Persistence configuration for the messages directory
persistence:
  # -- Enable persistence using PVC
  enabled: false
  # -- PVC Storage Class for messages volume
  # If defined, storageClassName: <storageClass>
  # If set to "-", storageClassName: "", which disables dynamic provisioning
  # If undefined (the default) or set to null, no storageClassName spec is
  # set, choosing the default provisioner
  storageClass: ""
  # -- PVC Access Mode for messages volume
  accessMode: ReadWriteOnce
  # -- PVC Storage Request for messages volume
  size: 1Gi
  # -- Annotations for the PVC
  annotations: {}
  # -- Selector to match an existing Persistent Volume (optional)
  # selector:
  #   matchLabels:
  #     app: my-app
  selector: {}

# -- Liveness probe configuration
livenessProbe: {}
  # httpGet:
  #   path: /
  #   port: http
  # initialDelaySeconds: 30
  # periodSeconds: 10
  # timeoutSeconds: 5
  # failureThreshold: 3

# -- Readiness probe configuration
readinessProbe: {}
  # httpGet:
  #   path: /
  #   port: http
  # initialDelaySeconds: 5
  # periodSeconds: 10
  # timeoutSeconds: 5
  # failureThreshold: 3

hostNetwork: false
nodeSelector: {}
tolerations: []
affinity: {}

# -- Environment variables for init containers
# Example:
#  - name: GOOGLE_APPLICATION_CREDENTIALS
#    value: "/root/.config/gcloud/application_default_credentials.json"
initEnvs: []

# -- Environment variables for the gateway container
envs: []

# -- Extra volumes for the mount pod, used when JuiceFS Client relies on extra config files
extraVolumes:
  #  - name: ceph-secret
  #    secret:
  #      secretName: ceph-secret
# -- Extra volume mounts for both init containers and main containers
# These volumes will be mounted in both the format init container and gateway container
extraVolumeMounts:
  #  - name: ceph-secret
  #    mountPath: "/etc/ceph"

# -- Secret configuration for JuiceFS
secret:
  # -- Whether to create a new secret or use an existing one
  create: true
  # -- Set to "Skip" to skip the sync of the secret
  sync: "Sync"
  # -- Name of the secret to use. If not specified, a name is generated using the fullname template
  name: ""
  # -- Annotations to add to the created secret
  annotations: {}
  # -- Labels to add to the created secret
  labels: {}
  
  # -- JuiceFS configuration (only used when secret.create is true)
  config:
    # -- Name of the secret to use for credentials
    credentialsSecret: ""
    # -- The JuiceFS file system name
    name: ""
    # -- JuiceFS Enterprise Edition file system token, if this token is specified,
    # this helm chart then assumes JuiceFS EE and neglect all CE configurations
    token: ""
    # -- Connection URL for metadata engine (e.g. Redis)
    # Ref: https://juicefs.com/docs/community/databases_for_metadata
    metaurl: ""
    # -- Object storage type, such as `s3`, `gs`, `oss`
    # Ref: https://juicefs.com/docs/community/how_to_setup_object_storage
    storage: ""
    # -- Object storage bucket or full endpoint
    # CE Ref: https://juicefs.com/docs/community/how_to_setup_object_storage
    # EE Ref (see --bucket): https://juicefs.com/docs/cloud/reference/command_reference/#auth
    bucket: ""
    # NOTE: Authentication is provided via mounted volumes:
    # - S3: Mount AWS credentials to /root/.aws/ (credentials and config files)
    # - GCS: Mount service account key to /var/secrets/google/ and set GOOGLE_APPLICATION_CREDENTIALS
    # -- RSA passphrase for encryption
    rsaPassphrase: ""
    # -- RSA private key for encryption
    # rsaKey: |
    #   -----BEGIN RSA PRIVATE KEY-----
    #   ...
    #   -----END RSA PRIVATE KEY-----
    rsaKey: ""


# -- ConfigMap configuration for non-sensitive data
configMap:
  # -- Whether to create a configmap
  create: true
  # -- Name of the configmap to use. If not specified, a name is generated using the fullname template
  name: ""
  # -- Annotations to add to the created configmap
  annotations: {}
  # -- Labels to add to the created configmap
  labels: {}
  # -- JuiceFS format options. Separated by spaces
  # Example: "--inodes=1000000 --block-size=4M"
  # Ref: https://juicefs.com/docs/community/command_reference#format
  formatOptions: "--inodes=1000000 --block-size=4M"
  # -- Gateway Options. Separated by spaces
  # Example: "--get-timeout=60 --put-timeout=60"
  # CE Ref: https://juicefs.com/docs/community/command_reference#gateway
  # EE Ref: https://juicefs.com/docs/cloud/reference/command_reference/#gateway
  options: "--get-timeout=60 --put-timeout=60 --keep-etag --object-meta --refresh-iam-interval=30s"
  # -- Webhook service as a target for Bucket Notifications
  webhookEndpoint: ""

# -- Metrics configuration
metrics:
  # -- Enable metrics collection
  enabled: false
  # -- ServiceMonitor configuration for Prometheus monitoring
  serviceMonitor:
    # -- Enable ServiceMonitor creation
    enabled: false
    # -- Namespace for the ServiceMonitor (defaults to release namespace)
    namespace: ""
    # -- Port name or number for metrics endpoint
    port: "http-metrics"
    # -- Path for metrics endpoint
    path: "/metrics"
    # -- Scrape interval
    interval: "30s"
    # -- Scrape timeout
    scrapeTimeout: "10s"
    # -- Additional labels for the ServiceMonitor
    additionalLabels: {}
    # -- Annotations for the ServiceMonitor
    annotations: {}
    # -- Relabeling configuration
    relabelings: []
    # -- Metric relabeling configuration
    metricRelabelings: []
    # -- TLS configuration
    tlsConfig: {}

# -- JuiceFS Gateway Configuration Job
# This job configures the gateway after deployment using MinIO Client (mc)
# Ref: https://juicefs.com/docs/community/guide/gateway/#use-a-webhook-to-publish-events
juicefsConfig:
  # -- Enable the configuration job
  enabled: false
  # -- MinIO Client image and version
  # Using the specific version recommended by JuiceFS documentation for compatibility
  image:
    repository: minio/mc
    tag: RELEASE.2021-04-22T17-40-00Z
    pullPolicy: IfNotPresent
  # -- Job restart policy
  restartPolicy: OnFailure
  # -- Number of retries before considering the job as failed
  backoffLimit: 5
  # -- TTL (seconds) to clean up finished jobs. Set to 0 to keep job history indefinitely
  ttlSecondsAfterFinished: 86400
  # -- Additional annotations for the job
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  # -- Additional labels for the job
  labels: {}
  # -- Pod annotations for the job
  podAnnotations: {}
  # -- Pod labels for the job
  podLabels: {}
  # -- Node selector for the job pod
  nodeSelector: {}
  # -- Tolerations for the job pod
  tolerations: []
  # -- Affinity for the job pod
  affinity: {}
  # -- Resource limits and requests for the job
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi
  webhookEndpoint: ""
  # -- List of mc commands to execute for gateway configuration
  # The following variables are available in command templates:
  # - GATEWAY_ENDPOINT: The gateway service endpoint (http://service-name:port)
  # - ACCESS_KEY: From MINIO_ROOT_USER secret
  # - SECRET_KEY: From MINIO_ROOT_PASSWORD secret
  # - WEBHOOK_ENDPOINT: The webhook service endpoint
  # - BUCKET_NAME: The bucket name
  # Example commands for webhook event notifications:
  # mcCommands:
  #   - mc alias set jfs ${GATEWAY_ENDPOINT} ${ACCESS_KEY} ${SECRET_KEY}
  #   - mc admin config set jfs notify_webhook:1 queue_limit="0" endpoint="http://webhook-service:3000" queue_dir=""
  #   - mc event add jfs/mybucket arn:minio:sqs::1:webhook --event put --suffix .jpg
  mcCommands:
    - mc alias set jfs ${GATEWAY_ENDPOINT} ${ACCESS_KEY} ${SECRET_KEY}
    - mc admin config set jfs notify_webhook:1 queue_limit="0" endpoint="${WEBHOOK_ENDPOINT}" queue_dir="/juicefs-queue"
    - sleep 60
    - mc event remove jfs/${BUCKET_NAME} --force
    - mc event add jfs/${BUCKET_NAME} arn:minio:sqs::1:webhook --event put,delete